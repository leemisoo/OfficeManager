using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DevExpress.XtraBars.Docking2010;
using DevExpress.XtraGrid.Views.Grid.ViewInfo;
using DevExpress.DataAccess.Sql;
using MySql.Data.MySqlClient;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Columns;

namespace officeManager
{
    public partial class adminCommCdRegForm : DevExpress.XtraEditors.XtraForm
    {
        
        private MySqlConnection _DB_MYSQL_CONNECT = null;

        string query = null;

        public void conn_DB_MYSQL_CONNECT_open()
        {
            try
            {
                if (_DB_MYSQL_CONNECT != null)
                    _DB_MYSQL_CONNECT.Close();

                _DB_MYSQL_CONNECT = new MySqlConnection(officeMainForm.mySQL_ConnString);
                _DB_MYSQL_CONNECT.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "DB Open Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        public void conn_DB_MYSQL_CONNECT_close()
        {
            _DB_MYSQL_CONNECT.Close();
        }

        public adminCommCdRegForm()
        {
            InitializeComponent();

            adminCommCdRegForm_CommCodeMasterQury();

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource1.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource2.Fill();
        }
        // Master ===============================================================================================

        // CommonCode Master Data Query
        public void adminCommCdRegForm_CommCodeMasterQury()
        {

            conn_DB_MYSQL_CONNECT_open();

            try
            {
                DataTable table = new DataTable();

                for (int i = 0; i < gridViewCommCdMaster.Columns.Count; i++)
                {
                    DevExpress.XtraGrid.Columns.GridColumn column = gridViewCommCdMaster.Columns[i];
                    if (column.FieldName == "ORD_SEQ")
                    {
                        table.Columns.Add(column.FieldName, typeof(decimal));
                    }
                    else
                    {
                        table.Columns.Add(column.FieldName, typeof(string));
                    }
                }

                // Select Query
                mySQL_COMCODE_Master_Select();

                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);

                MySqlDataReader reader = command.ExecuteReader();

                while (reader.Read())
                {
                    DataRow row = table.NewRow();
                    for (int i = 0; i < reader.FieldCount; i++)
                    {
                        row[i] = reader.GetValue(i);
                        //row[i] = i;
                    }

                    table.Rows.Add(row);
                }

                reader.Close();   // 쿼리문 결과 닫기, Reader 로 열었으면 반드시 닫아야 한다.
                conn_DB_MYSQL_CONNECT_close();  // Connection Close     

                grdConCommCdMaster.DataSource = table;
                //gridViewCommCdMaster.BestFitColumns();

                // CommonCode Detail Data Query
                adminCommCdRegForm_CommCodeDetailQury("THMM_FG");

                
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


        }

        // 공통코드 마스터 그리드 클릭 이벤트
        private void grdConCommCdMaster_Click(object sender, EventArgs e)
        {
            MouseEventArgs ea = e as MouseEventArgs;
            if (ea == null) return;
            GridHitInfo hi = gridViewCommCdMaster.CalcHitInfo(ea.Location);
            int datasourceRowIndex = gridViewCommCdMaster.GetDataSourceRowIndex(hi.RowHandle);

            int rowHandle = gridViewCommCdMaster.GetRowHandle(datasourceRowIndex);

            if (rowHandle >= 0)
            {
                adminCommCdRegForm_CommCodeDetailQury(gridViewCommCdMaster.GetRowCellValue(rowHandle, "COMM_CD").ToString());
            }
        }

        // 공통코드 마스터 버튼 이벤트 (행추가, 행삭제, 저장, 조회)
        private void groupConCommCdMaster_CustomButtonClick(object sender, BaseButtonEventArgs e)
        {
            //MessageBox.Show("Button caption Master: " + e.Button.Properties.Caption);

            if (e.Button.Properties.Caption == "행추가")
            {
                gridViewCommCdMaster.AddNewRow();
            }
            
            if (e.Button.Properties.Caption == "행삭제")
            {
                if (MessageBox.Show("삭제하시겠습니까?", "삭제", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    //MessageBox.Show(gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString());

                    conn_DB_MYSQL_CONNECT_open();
                    try
                    {
                        // Delete Query
                        string iCOMM_CD = gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString();
                        mySQL_COMCODE_Master_Delete(iCOMM_CD);

                        MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                        command.ExecuteReader();

                        conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }

                    gridViewCommCdMaster.DeleteSelectedRows();
                }
            }

            if (e.Button.Properties.Caption == "조회")
            {
                adminCommCdRegForm_CommCodeMasterQury();
            }

            if (e.Button.Properties.Caption == "저장")
            {

                string iGRP_CD = null;
                string iCOMM_CD = null;
                string iCOMM_CD_NM = null;
                string iUSE_YN = null;
                string iCD_DESC = null;

                //MessageBox.Show("Button caption Master: " + e.Button.Properties.Caption);
                //MessageBox.Show(gridViewCommCdMaster.RowCount.ToString());
                for (int i=0; i<gridViewCommCdMaster.RowCount ;i++)
                {
                    if (gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD").ToString().Trim() != "")
                    {
                        if (gridViewCommCdMaster.GetRowCellValue(i, "CRUD").ToString() == "I")
                        {
                            iGRP_CD = gridViewCommCdMaster.GetRowCellValue(i, "GRP_CD").ToString();
                            iCOMM_CD = gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD").ToString();
                            iCOMM_CD_NM = gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD_NM").ToString();
                            iUSE_YN = gridViewCommCdMaster.GetRowCellValue(i, "USE_YN").ToString();
                            iCD_DESC = gridViewCommCdMaster.GetRowCellValue(i, "CD_DESC").ToString();

                            //MessageBox.Show(gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD").ToString() + " : " + gridViewCommCdMaster.GetRowCellValue(i, "CRUD").ToString());
                            
                            conn_DB_MYSQL_CONNECT_open();
                            try
                            {
                                // Insert Query
                                mySQL_COMCODE_Master_Insert(iCOMM_CD, iCOMM_CD_NM, iUSE_YN, iCD_DESC);
                                //MessageBox.Show(query);
                                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                                command.ExecuteReader();

                                conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }
                            
                        }

                        if (gridViewCommCdMaster.GetRowCellValue(i, "CRUD").ToString() == "U")
                        {
                            iGRP_CD = gridViewCommCdMaster.GetRowCellValue(i, "GRP_CD").ToString();
                            iCOMM_CD = gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD").ToString();
                            iCOMM_CD_NM = gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD_NM").ToString();
                            iUSE_YN = gridViewCommCdMaster.GetRowCellValue(i, "USE_YN").ToString();
                            iCD_DESC = gridViewCommCdMaster.GetRowCellValue(i, "CD_DESC").ToString();

                            //MessageBox.Show(gridViewCommCdMaster.GetRowCellValue(i, "COMM_CD").ToString() + " : " + gridViewCommCdMaster.GetRowCellValue(i, "CRUD").ToString());
                            
                            conn_DB_MYSQL_CONNECT_open();
                            try
                            {
                                // Update Query
                                mySQL_COMCODE_Master_Update(iCOMM_CD, iCOMM_CD_NM, iUSE_YN, iCD_DESC);

                                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                                command.ExecuteReader();

                                conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }
                            
                        }
                    }
                }
                adminCommCdRegForm_CommCodeMasterQury();
            }

        }

        // 공통코드 마스터 버튼 이벤트 (행추가)
        private void gridViewCommCdMaster_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            //MessageBox.Show("InitNewRow = " + e.RowHandle.ToString());

            DataRow row = gridViewCommCdMaster.GetDataRow(e.RowHandle);
            row["CRUD"] = "I";
            row["USE_YN"] = "Y";
        }

        // 공통코드 마스터 버튼 이벤트 (행변경)
        private void gridViewCommCdMaster_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            //MessageBox.Show("RowUpdated" + e.RowHandle.ToString());

            if (e.RowHandle >= 0)
            {
                if (gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "CRUD").ToString().Trim() != "I")
                {
                    DataRow row = gridViewCommCdMaster.GetDataRow(e.RowHandle);
                    row["CRUD"] = "U";
                }
            }
        }

        //gridViewCommCdMaster Validation (Row)
        private void gridViewCommCdMaster_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            GridView view = sender as GridView;
            GridColumn varCOMM_CD = view.Columns["COMM_CD"];
            GridColumn varCOMM_CD_NM = view.Columns["COMM_CD_NM"];

            string iCOMM_CD = gridViewCommCdMaster.GetRowCellValue(e.RowHandle, "COMM_CD").ToString();
            string iCOMM_CD_NM = gridViewCommCdMaster.GetRowCellValue(e.RowHandle, "COMM_CD_NM").ToString();
            //MessageBox.Show(varCOMM_CD.View.FocusedValue.ToString());

            if (iCOMM_CD.ToString().Trim() == "" || iCOMM_CD.ToString().Trim() == null)
            {
                e.Valid = false;
                view.SetColumnError(varCOMM_CD, "[공통코드]는 필수 입력 값 입니다.");
            }
            if (iCOMM_CD_NM.ToString().Trim() == "" || iCOMM_CD_NM.ToString().Trim() == null)
            {
                e.Valid = false;
                view.SetColumnError(varCOMM_CD_NM, "[공통코드명]는 필수 입력 값 입니다.");
            }
        }

        //gridViewCommCdMaster Validation (Editor)
        private void gridViewCommCdMaster_ValidatingEditor(object sender, DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs e)
        {
            GridView view = sender as GridView;

            if (view.FocusedColumn.FieldName == "COMM_CD")
            {
                if (e.Value.ToString().Trim() == "" || e.Value.ToString().Trim() == null)
                {
                    e.Valid = false;
                    e.ErrorText = "[공통코드]는 필수 입력 값 입니다.";
                }
            }
            if (view.FocusedColumn.FieldName == "COMM_CD_NM")
            {
                if (e.Value.ToString().Trim() == "" || e.Value.ToString().Trim() == null)
                {
                    e.Valid = false;
                    e.ErrorText = "[공통코드명]는 필수 입력 값 입니다.";
                }
            }
        }

        // Detail ===============================================================================================

        // CommonCode Detail Data Query
        public void adminCommCdRegForm_CommCodeDetailQury(string iGRP_CD)
        {

            conn_DB_MYSQL_CONNECT_open();

            try
            {
                DataTable table = new DataTable();

                for (int i = 0; i < gridViewCommCdDetail.Columns.Count; i++)
                {
                    DevExpress.XtraGrid.Columns.GridColumn column = gridViewCommCdDetail.Columns[i];
                    if (column.FieldName == "ORD_SEQ")
                    {
                        table.Columns.Add(column.FieldName, typeof(decimal));
                    }
                    else
                    {
                        table.Columns.Add(column.FieldName, typeof(string));
                    }
                }

                // Select Query
                mySQL_COMCODE_Detil_Select(iGRP_CD);

                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);

                MySqlDataReader reader = command.ExecuteReader();

                while (reader.Read())
                {
                    DataRow row = table.NewRow();
                    for (int i = 0; i < reader.FieldCount; i++)
                    {
                        row[i] = reader.GetValue(i);
                        //row[i] = i;
                    }

                    table.Rows.Add(row);
                }

                reader.Close();   // 쿼리문 결과 닫기, Reader 로 열었으면 반드시 닫아야 한다.
                conn_DB_MYSQL_CONNECT_close();  // Connection Close     

                grdConCommCdDetail.DataSource = table;
                //gridViewCommCdMaster.BestFitColumns();
                
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            
        }

        // 공통코드 상세 버튼 이벤트 (행추가, 행삭제, 저장, 조회)
        private void groupConCommCdDetail_CustomButtonClick(object sender, BaseButtonEventArgs e)
        {
            if (e.Button.Properties.Caption == "행추가")
            {
                gridViewCommCdDetail.AddNewRow();
            }

            if (e.Button.Properties.Caption == "행삭제")
            {
                if (MessageBox.Show("삭제하시겠습니까?", "삭제", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    //MessageBox.Show(gridViewCommCdDetail.GetRowCellValue(gridViewCommCdDetail.FocusedRowHandle, "COMM_CD").ToString());

                    conn_DB_MYSQL_CONNECT_open();
                    try
                    {
                        // Delete Query
                        string iGRP_CD = gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString();
                        string iCOMM_CD = gridViewCommCdDetail.GetRowCellValue(gridViewCommCdDetail.FocusedRowHandle, "COMM_CD").ToString();
                        mySQL_COMCODE_Detail_Delete(iGRP_CD, iCOMM_CD);

                        MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                        command.ExecuteReader();

                        conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }

                    gridViewCommCdDetail.DeleteSelectedRows();
                }

            }

            if (e.Button.Properties.Caption == "저장")
            {
                string iGRP_CD = null;
                string iCOMM_CD = null;
                string iCOMM_CD_NM = null;
                string iUSE_YN = null;
                string iCD_DESC = null;

                //MessageBox.Show("Button caption Master: " + e.Button.Properties.Caption);
                //MessageBox.Show(gridViewCommCdDetail.RowCount.ToString());
                for (int i = 0; i < gridViewCommCdDetail.RowCount; i++)
                {
                    if (gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD").ToString().Trim() != "")
                    {
                        if (gridViewCommCdDetail.GetRowCellValue(i, "CRUD").ToString() == "I")
                        {
                            iGRP_CD = gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString();
                            iCOMM_CD = gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD").ToString();
                            iCOMM_CD_NM = gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD_NM").ToString();
                            iUSE_YN = gridViewCommCdDetail.GetRowCellValue(i, "USE_YN").ToString();
                            iCD_DESC = gridViewCommCdDetail.GetRowCellValue(i, "CD_DESC").ToString();

                            //MessageBox.Show(gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD").ToString() + " : " + gridViewCommCdDetail.GetRowCellValue(i, "CRUD").ToString());

                            conn_DB_MYSQL_CONNECT_open();
                            try
                            {
                                // Insert Query
                                mySQL_COMCODE_Detail_Insert(iGRP_CD, iCOMM_CD, iCOMM_CD_NM, iUSE_YN, iCD_DESC);
                                //MessageBox.Show(query);
                                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                                command.ExecuteReader();

                                conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }

                        }

                        if (gridViewCommCdDetail.GetRowCellValue(i, "CRUD").ToString() == "U")
                        {
                            iGRP_CD = gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString();
                            iCOMM_CD = gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD").ToString();
                            iCOMM_CD_NM = gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD_NM").ToString();
                            iUSE_YN = gridViewCommCdDetail.GetRowCellValue(i, "USE_YN").ToString();
                            iCD_DESC = gridViewCommCdDetail.GetRowCellValue(i, "CD_DESC").ToString();

                            //MessageBox.Show(gridViewCommCdDetail.GetRowCellValue(i, "COMM_CD").ToString() + " : " + gridViewCommCdDetail.GetRowCellValue(i, "CRUD").ToString());

                            conn_DB_MYSQL_CONNECT_open();
                            try
                            {
                                // Update Query
                                mySQL_COMCODE_Detail_Update(iGRP_CD, iCOMM_CD, iCOMM_CD_NM, iUSE_YN, iCD_DESC);

                                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);
                                command.ExecuteReader();

                                conn_DB_MYSQL_CONNECT_close();  // Connection Close     
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            }

                        }
                    }
                }
                adminCommCdRegForm_CommCodeDetailQury(gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString());
            }

            if (e.Button.Properties.Caption == "조회")
            {
                adminCommCdRegForm_CommCodeDetailQury(gridViewCommCdMaster.GetRowCellValue(gridViewCommCdMaster.FocusedRowHandle, "COMM_CD").ToString());
            }
        }

        // 공통코드 상세 버튼 이벤트 (행추가)
        private void gridViewCommCdDetail_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            DataRow row = gridViewCommCdDetail.GetDataRow(e.RowHandle);
            row["CRUD"] = "I";
            row["USE_YN"] = "Y";
        }

        // 공통코드 상세 버튼 이벤트 (행변경)
        private void gridViewCommCdDetail_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            if (e.RowHandle >= 0)
            {
                if (gridViewCommCdDetail.GetRowCellValue(gridViewCommCdDetail.FocusedRowHandle, "CRUD").ToString().Trim() != "I")
                {
                    DataRow row = gridViewCommCdDetail.GetDataRow(e.RowHandle);
                    row["CRUD"] = "U";
                }
            }
        }

        //gridViewCommCdDetail Validation (Row)
        private void gridViewCommCdDetail_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            GridView view = sender as GridView;
            GridColumn varCOMM_CD = view.Columns["COMM_CD"];
            GridColumn varCOMM_CD_NM = view.Columns["COMM_CD_NM"];

            string iCOMM_CD = gridViewCommCdDetail.GetRowCellValue(e.RowHandle, "COMM_CD").ToString();
            string iCOMM_CD_NM = gridViewCommCdDetail.GetRowCellValue(e.RowHandle, "COMM_CD_NM").ToString();
            //MessageBox.Show(varCOMM_CD.View.FocusedValue.ToString());

            if (iCOMM_CD.ToString().Trim() == "" || iCOMM_CD.ToString().Trim() == null)
            {
                e.Valid = false;
                view.SetColumnError(varCOMM_CD, "[공통코드]는 필수 입력 값 입니다.");
            }
            if (iCOMM_CD_NM.ToString().Trim() == "" || iCOMM_CD_NM.ToString().Trim() == null)
            {
                e.Valid = false;
                view.SetColumnError(varCOMM_CD_NM, "[공통코드명]는 필수 입력 값 입니다.");
            }
        }

        //gridViewCommCdDetail Validation (Editor)
        private void gridViewCommCdDetail_ValidatingEditor(object sender, DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs e)
        {
            GridView view = sender as GridView;

            if (view.FocusedColumn.FieldName == "COMM_CD")
            {
                if (e.Value.ToString().Trim() == "" || e.Value.ToString().Trim() == null)
                {
                    e.Valid = false;
                    e.ErrorText = "[공통코드]는 필수 입력 값 입니다.";
                }
            }
            if (view.FocusedColumn.FieldName == "COMM_CD_NM")
            {
                if (e.Value.ToString().Trim() == "" || e.Value.ToString().Trim() == null)
                {
                    e.Valid = false;
                    e.ErrorText = "[공통코드명]는 필수 입력 값 입니다.";
                }
            }
        }

        // Query ===============================================================================================
        // INSERT INTO table_name (column1,column2,column3,...)
        //        VALUES (value1,value2,value3,...);
        //
        // UPDATE table_name
        //    SET column1=value1,column2=value2,...
        //  WHERE some_column=some_value;
        //
        // DELETE FROM table_name
        //  WHERE some_column=some_value;
        // =====================================================================================================

        // COM_CODE Master Select
        private void mySQL_COMCODE_Master_Select()
        {
            query = "SELECT GRP_CD, ORD_SEQ, COMM_CD, COMM_CD_NM, USE_YN, CD_DESC, REG_ID, REG_DTTM, UPDT_ID, UPDT_DTTM " +
                    "  FROM COM_CODE WHERE GRP_CD = '*' ORDER BY ORD_SEQ";
        }

        // COM_CODE Master Insert
        private void mySQL_COMCODE_Master_Insert(string iCOMM_CD, string iCOMM_CD_NM, string iUSE_YN, string iCD_DESC)
        {
            query = "INSERT INTO COM_CODE (GRP_CD, ORD_SEQ, COMM_CD, COMM_CD_NM, USE_YN, CD_DESC, REG_ID, REG_DTTM, UPDT_ID, UPDT_DTTM) " +
                    "       VALUES ('*', (SELECT MAX(A.ORD_SEQ)+1 FROM COM_CODE A WHERE A.GRP_CD = '*'), " +
                    "               '" + iCOMM_CD + "', " +
                    "               '" + iCOMM_CD_NM + "', " +
                    "               '" + iUSE_YN + "', " +
                    "               '" + iCD_DESC + "', " +
                    "               '" + officeMainForm.main_LoginId + "', " +
                    "                    NOW(), " +
                    "               '" + officeMainForm.main_LoginId + "', " +
                    "                    NOW() " +
                    "       )";
        }

        // COM_CODE Master Update
        private void mySQL_COMCODE_Master_Update(string iCOMM_CD, string iCOMM_CD_NM, string iUSE_YN, string iCD_DESC)
        {
            query = "UPDATE COM_CODE " +
                    "   SET COMM_CD_NM = '" + iCOMM_CD_NM + "' " +
                    "     , USE_YN     = '" + iUSE_YN + "' " +
                    "     , CD_DESC    = '" + iCD_DESC + "' " +
                    "     , UPDT_ID    = '" + officeMainForm.main_LoginId + "' " +
                    "     , UPDT_DTTM  = NOW() " +
                    " WHERE GRP_CD     = '*' " +
                    "   AND COMM_CD    = '" + iCOMM_CD + "' " +
                    "       ";
        }

        // COM_CODE Master Delete
        private void mySQL_COMCODE_Master_Delete(string iCOMM_CD)
        {
            query = "DELETE FROM COM_CODE " +
                    " WHERE GRP_CD     = '*' " +
                    "   AND COMM_CD    = '" + iCOMM_CD + "' " +
                    "       ";
        }

        // COM_CODE Detail select
        private void mySQL_COMCODE_Detil_Select(string iGRP_CD)
        {
            query = "SELECT GRP_CD, ORD_SEQ, COMM_CD, COMM_CD_NM, USE_YN, CD_DESC, REG_ID, REG_DTTM, UPDT_ID, UPDT_DTTM " +
                    "  FROM COM_CODE WHERE GRP_CD = '" + iGRP_CD + "' ORDER BY ORD_SEQ";
        }

        // COM_CODE Detail Insert
        private void mySQL_COMCODE_Detail_Insert(string iGRP_CD, string iCOMM_CD, string iCOMM_CD_NM, string iUSE_YN, string iCD_DESC)
        {
            query = "INSERT INTO COM_CODE (GRP_CD, ORD_SEQ, COMM_CD, COMM_CD_NM, USE_YN, CD_DESC, REG_ID, REG_DTTM, UPDT_ID, UPDT_DTTM) " +
                    "       VALUES ('" + iGRP_CD + "', (SELECT MAX(A.ORD_SEQ)+1 FROM COM_CODE A WHERE A.GRP_CD = '" + iGRP_CD + "'), " +
                    "               '" + iCOMM_CD + "', " +
                    "               '" + iCOMM_CD_NM + "', " +
                    "               '" + iUSE_YN + "', " +
                    "               '" + iCD_DESC + "', " +
                    "               '" + officeMainForm.main_LoginId + "', " +
                    "                    NOW(), " +
                    "               '" + officeMainForm.main_LoginId + "', " +
                    "                    NOW() " +
                    "       )";
        }

        // COM_CODE Detail Update
        private void mySQL_COMCODE_Detail_Update(string iGRP_CD, string iCOMM_CD, string iCOMM_CD_NM, string iUSE_YN, string iCD_DESC)
        {
            query = "UPDATE COM_CODE " +
                    "   SET COMM_CD_NM = '" + iCOMM_CD_NM + "' " +
                    "     , USE_YN     = '" + iUSE_YN + "' " +
                    "     , CD_DESC    = '" + iCD_DESC + "' " +
                    "     , UPDT_ID    = '" + officeMainForm.main_LoginId + "' " +
                    "     , UPDT_DTTM  = NOW() " +
                    " WHERE GRP_CD     = '" + iGRP_CD + "' " +
                    "   AND COMM_CD    = '" + iCOMM_CD + "' " +
                    "       ";
        }

        // COM_CODE Detail Delete
        private void mySQL_COMCODE_Detail_Delete(string iGRP_CD, string iCOMM_CD)
        {
            query = "DELETE FROM COM_CODE " +
                    " WHERE GRP_CD     = '" + iGRP_CD + "' " +
                    "   AND COMM_CD    = '" + iCOMM_CD + "' " +
                    "       ";
        }

        private void groupConCommCdMaster_Paint(object sender, PaintEventArgs e)
        {

        }

    }
}
