using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using MySql.Data.MySqlClient;

namespace officeManager
{
    public partial class MemberQueryForm : DevExpress.XtraEditors.XtraForm
    {
        private MySqlConnection _DB_MYSQL_CONNECT = null;

        string query = null;

        public void conn_DB_MYSQL_CONNECT_open()
        {
            try
            {
                if (_DB_MYSQL_CONNECT != null)
                    _DB_MYSQL_CONNECT.Close();

                _DB_MYSQL_CONNECT = new MySqlConnection(officeMainForm.mySQL_ConnString);
                _DB_MYSQL_CONNECT.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "DB Open Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        public void conn_DB_MYSQL_CONNECT_close()
        {
            _DB_MYSQL_CONNECT.Close();
        }

        public MemberQueryForm()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
          //  sqlDataSource1.Fill();
            selectMemberList();
        }
        // GIFT_INFO Data Query
        public void selectMemberList()
        {
            conn_DB_MYSQL_CONNECT_open();

            try
            {
                DataTable table = new DataTable();

                for (int i = 0; i < gridView1.Columns.Count; i++)
                {
                    DevExpress.XtraGrid.Columns.GridColumn column = gridView1.Columns[i];
                    if (column.FieldName == "GIFT_PRC" || column.FieldName == "STOCK_AMT")
                    {
                        table.Columns.Add(column.FieldName, typeof(decimal));
                    }
                    else
                    {
                        table.Columns.Add(column.FieldName, typeof(string));
                    }
                }

                // Select Query
                _SelectMember();

                MySqlCommand command = new MySqlCommand(query, _DB_MYSQL_CONNECT);

                MySqlDataReader reader = command.ExecuteReader();

                while (reader.Read())
                {
                    DataRow row = table.NewRow();
                    for (int i = 0; i < reader.FieldCount; i++)
                    {
                        row[i] = reader.GetValue(i);
                        //row[i] = i;
                    }

                    table.Rows.Add(row);
                }

                reader.Close();   // 쿼리문 결과 닫기, Reader 로 열었으면 반드시 닫아야 한다.
                conn_DB_MYSQL_CONNECT_close();  // Connection Close     

                gridControl1.DataSource = table;
                //gridViewCommCdMaster.BestFitColumns();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
        // GIFT_INFO Select
        private void _SelectMember()
        {
            query =
                " SELECT MBR_NO " +
                "       , APPLY_SEQ  " +
                "       , MBR_NM  " +
                "       , BIRTH_DT  " +
                "       , GENDER " +
                "       , SUBJ_CD " +
                "       , LVL_CD " +
                "       , CNTR_FG_CD " +
                "     , SUBS_AMT " +
                "     , SUBS_MM_CNT " +
                "     , MBR_FG_CD " +
                "     , CTRTR_NM " +
                "     , MBR_REL_NM " +
                "     , PHON_NO " +
                "     , PHON_NO2 " +
                "     , ZIP_NO " +
                "     , ADDR1 " +
                "     , ADDR2 " +
                "     , CNTR_AMT  " +
                "     , SALES_PSN_NO " +
                "     , CNTR_PLC " +
                "     , DATE_FORMAT(APPLY_DT,'YYYY-mm-dd') " +
                "     , DATE_FORMAT(STD_STR_DT,'YYYY-mm-dd') " +
                "     , DATE_FORMAT(STD_END_DT,'YYYY-mm-dd') " +
                "     , STD_STR_HO " +
                "     , CNCL_DT " +
                "     , DATE_FORMAT(CNCL_AMT_PAY_DT,'YYYY-mm-dd') " +
                "     , CNCL_PLN_AMT " +
                "     , REMNT_10P_AMT " +
                "     , CNCL_AMT " +
                "     , MNGT_FEE " +
                "     , PYMT_FG_CD " +
                "     , MBR_STS_CD " +
                "     , LAST_DELV_HO " +
                "     , BRCH_CD " +
                "     , FILE_NM " +
                "     , REG_ID " +
                "     , DATE_FORMAT(REG_DTTM,'YYYY-mm-dd') " +
                "     , UPDT_ID " +
                "     , DATE_FORMAT(UPDT_DTTM,'YYYY-mm-dd') " +
                "     , ALLOT_MM_CNT " +
                "     , PYMT_DY " +
                "     , STD_STR_YM " +
                "     , STD_END_YM " +
                "     , REMNT_AMT " +
                "     , PROD_LOSS_RT " +
                "  FROM MBR_SUBJ_APPLY  ";
        }
    }
}